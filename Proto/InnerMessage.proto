syntax = "proto3";
package ET;

//ResponseType ObjectQueryResponse
message ObjectQueryRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 InstanceId = 2;
}

//ResponseType A2M_Reload
message M2A_Reload // IActorRequest
{
	int32 RpcId = 90;
}

message A2M_Reload // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType ObjectAddResponse
message ObjectAddRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 InstanceId = 2;
}

message ObjectAddResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType ObjectLockResponse
message ObjectLockRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 InstanceId = 2;
	int32 Time = 3;
}
message ObjectLockResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType ObjectUnLockResponse
message ObjectUnLockRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 OldInstanceId = 2;
	int64 InstanceId = 3;
}
message ObjectUnLockResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType ObjectRemoveResponse
message ObjectRemoveRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
}
message ObjectRemoveResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType ObjectGetResponse
message ObjectGetRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
}
message ObjectGetResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 InstanceId = 1;
}

//ResponseType R2G_PlayerOnlineResponse
message G2R_PlayerOnlineRequest // IActorRequest
{
	int32 RpcId = 90;
	
	long Uid = 1;
	string RealmToken = 2;
	long GateId = 3;
}
message R2G_PlayerOnlineResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2G_PlayerOfflineResponse
message G2R_PlayerOfflineRequest // IActorRequest
{
	int32 RpcId = 90;
	
	long Uid = 1;
	string RealmToken = 2;
	
}
message R2G_PlayerOfflineResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType G2R_PlayerKickOutResponse
message R2G_PlayerKickOutRequest // IActorRequest
{
	int32 RpcId = 90;
	
	long Uid = 1;
}
message G2R_PlayerKickOutResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}